import streamlit as st
import matplotlib.pyplot as plt
import datetime
import pandas as pd

def mostrar_progress():
    st.title("üìÖ Progress Tracker")
    
    # Pedimos al usuario los d√≠as que fue al gimnasio
    dias_asistidos = st.multiselect(
        "Selecciona los d√≠as que fuiste al gimnasio:", 
        options=[f"{i+1}/{datetime.datetime.now().month}" for i in range(31)]
    )

    # Guardamos los d√≠as en el session_state si no existe
    if "dias_asistidos_registrados" not in st.session_state:
        st.session_state.dias_asistidos_registrados = []

    # Si se presiona el bot√≥n para guardar los d√≠as
    if st.button("Guardar d√≠as en CSV"):
        # Si el usuario seleccion√≥ d√≠as nuevos, los agregamos a los d√≠as registrados
        if dias_asistidos and dias_asistidos != st.session_state.dias_asistidos_registrados:
            st.session_state.dias_asistidos_registrados = dias_asistidos
            # Guardamos la lista de d√≠as en un archivo CSV
            df = pd.DataFrame(st.session_state.dias_asistidos_registrados, columns=["D√≠as Asistidos"])
            df.to_csv("progress_tracker.csv", index=False)
            st.success("D√≠as guardados en 'progress_tracker.csv' üìù")

    # Convertimos los datos para graficar
    dias_numericos = [int(dia.split('/')[0]) for dia in dias_asistidos]
    
    # Graficamos los d√≠as asistidos con puntos
    fig, ax = plt.subplots()
    ax.scatter(dias_numericos, [1]*len(dias_numericos), color="blue", label="D√≠as Asistidos")
    ax.set_yticks([])  # Quitamos los ticks del eje Y
    ax.set_xticks(range(1, 32))  # Mostramos todos los d√≠as del mes en X
    ax.set_xlabel("D√≠a del Mes")
    ax.set_title("D√≠as Asistidos al Gimnasio")
    ax.legend()
    
    st.pyplot(fig)

if __name__ == "__main__":
    mostrar_progress()
